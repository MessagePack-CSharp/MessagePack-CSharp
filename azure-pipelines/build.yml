parameters:
- name: windowsPool
  type: object
  default:
    vmImage: windows-2022
- name: includeMacOS
- name: RunTests
  type: boolean
  default: true

jobs:
- job: Windows
  pool: ${{ parameters.windowsPool }}
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
  - template: install-dependencies.yml

  - script: dotnet nbgv cloud -c
    displayName: âš™ Set build number

  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}

- job: Linux
  pool:
    vmImage: Ubuntu 20.04
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
  - template: install-dependencies.yml
  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}
  - script: dotnet format --verify-no-changes --no-restore
    displayName: ðŸ’… Verify formatted code

- job: macOS
  condition: ${{ parameters.includeMacOS }}
  pool:
    vmImage: macOS-12
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
  - template: install-dependencies.yml
  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}

- job: WrapUp
  dependsOn:
  - Windows
  - Linux
  - macOS
  pool: ${{ parameters.windowsPool }} # Use Windows agent because PublishSymbols task requires it (https://github.com/microsoft/azure-pipelines-tasks/issues/13821).
  condition: succeededOrFailed()
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
  - template: install-dependencies.yml
    parameters:
      initArgs: -NoRestore
  - template: publish-symbols.yml
    parameters:
      includeMacOS: ${{ parameters.includeMacOS }}
  - ${{ if parameters.RunTests }}:
    - template: publish-codecoverage.yml
      parameters:
        includeMacOS: ${{ parameters.includeMacOS }}
  - template: publish-deployables.yml
